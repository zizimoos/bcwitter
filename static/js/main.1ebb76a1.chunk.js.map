{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","toggleEditing","doc","id","update","onDeleteClick","window","confirm","delete","refFromURL","attachmentURL","autoFocus","src","alt","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","creatorName","displayName","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","argz","Boolean","currentUser","args","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ebb76a1.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fBase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        ></input>\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        ></input>\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n          className=\"authInput\"\n        ></input>\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Log in\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { authService, firebaseInstance } from \"fBase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm></AuthForm>\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    // console.log(nweetObj, newNweet);\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure want to delete this nweet?\");\n    // console.log(ok);\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentURL).delete();\n    }\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              onChange={onChange}\n              value={newNweet}\n              required\n              autoFocus\n              className=\"formInput\"\n            ></input>\n            <input\n              type=\"submit\"\n              value=\"Update Nweet\"\n              className=\"formBtn\"\n            ></input>\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentURL && (\n            <img src={nweetObj.attachmentURL} alt=\"PIC\"></img>\n          )}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fBase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentURL = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentURL = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      creatorName: userObj.displayName,\n      attachmentURL,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt=\"forpic\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useState, useEffect } from \"react\";\n\nimport { dbService } from \"fBase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj}></NweetFactory>\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          ></Nweet>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fBase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj}></Navigation>}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth></Auth>\n            </Route>\n            {/* <Redirect from=\"*\" to=\"/\"></Redirect> */}\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (argz) => user.updateProfile(argz),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        ></AppRouter>\n      ) : (\n        \"Initializing ...\"\n      )}\n      <footer>&copy; bcwitter {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}